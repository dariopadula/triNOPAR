<<<<<<< HEAD
for (i in 1:length(t)){
int=list()
alu=list()
for (j in 1:length(ifi1)){
#      integrand=function(x){nucleod((ifi1[j]-x)/hd,1,0)$res}
integrand=function(x){(3/4)*(1-((ifi1[j]-x)/hd)^2)*(abs(((ifi1[j]-x)/hd))<=1)}
alu[j]=integrate(integrand,-Inf,t[i],subdivisions=10,rel.tol = 0.03,abs.tol =0.05,stop.on.error = FALSE)[[1]]
asi[i,j]=alu[j]
iit=0
#      for(k in seq(0,t[i],0.001)){
#iit=(1/sqrt(2*pi))*exp(-((ifi1[j]-k)/hd)^2/2)*0.001+iit
#        iit=(3/4)*(1-((ifi1[j]-k)/hd)^2)*(abs(((ifi1[j]-k)/hd))<=1)
#      }
#      asa[i,j]=iit
}
fes[i]=(1/(length(ifi1)*hd))*sum(unlist(alu))
}
sument=apply(asi,1,sum)
fes2=(1/(length(ifi1)*hd))*sument
#  sument3=apply(asa,1,sum)
#  fes3=(1/(length(ifi1)*hd))*sument3
t=c(max(t[1]-((t[2]-t[1])/(fes[2]-fes[1]))*fes[1],0),t,1)
fes=c(0.0005,fes,0.9995)
resfin<-approx(fes,t,puntosicc)$y
fes2[1]
plot[resfin,puntosicc]
resfin
punyosicc
puntosicc
plot(resfin,puntosicc)
t=c(1:nt/nt)
t[length(t)]=0.9999
res=numeric(length(t))
fes=numeric(length(t))
auxpu=c(0,puntosicc,1)
auxic=c(icc1[1],icc1,1)
ifi1<-approx(auxpu,auxic,t)$y
asi=as.data.frame(NULL)
asa=as.data.frame(NULL)
for (i in 1:length(t)){
int=list()
alu=list()
for (j in 1:length(ifi1)){
#      integrand=function(x){nucleod((ifi1[j]-x)/hd,1,0)$res}
#      integrand=function(x){(3/4)*(1-((ifi1[j]-x)/hd)^2)*(abs(((ifi1[j]-x)/hd))<=1)}
integrand=function(x){(1/sqrt(pi*2))*exp(-(((ifi1[j]-x)/hd)^2)/2)}
alu[j]=integrate(integrand,-Inf,t[i],subdivisions=10,rel.tol = 0.03,abs.tol =0.05,stop.on.error = FALSE)[[1]]
asi[i,j]=alu[j]
iit=0
#      for(k in seq(0,t[i],0.001)){
#iit=(1/sqrt(2*pi))*exp(-((ifi1[j]-k)/hd)^2/2)*0.001+iit
#        iit=(3/4)*(1-((ifi1[j]-k)/hd)^2)*(abs(((ifi1[j]-k)/hd))<=1)
#      }
#      asa[i,j]=iit
}
fes[i]=(1/(length(ifi1)*hd))*sum(unlist(alu))
}
sument=apply(asi,1,sum)
fes2=(1/(length(ifi1)*hd))*sument
#  sument3=apply(asa,1,sum)
#  fes3=(1/(length(ifi1)*hd))*sument3
t=c(max(t[1]-((t[2]-t[1])/(fes[2]-fes[1]))*fes[1],0),t,1)
fes=c(0.0005,fes,0.9995)
resfin<-approx(fes,t,puntosicc)$y
plot(resfin,puntosicc)
ISINPT=icciso(icc1=ICCNPT$NPICC,hd=hdi,thetaiso=seq(0,1,0.001),nt=200,puntosicc=pnorm(ICCNPT$puntos),nucleod=normal)
thepl=qnorm(seq(0,1,0.001))
plot(thepl,ICCNPU$NPICC,col="blue",xlim=c(-4,4),ylim=c(0,1))
Prob1 <- c + (1 - c) /(1 + exp(-D * a * (thepl - b)))
points(thepl,Prob1,col="red")
points(thepl,ISINPT$resfin,col = 'orange')
icciso=function(icc1,hd,thetaiso,nt,puntosicc,nucleod){
#Arma la grilla para aplicar la ec 2 del cap Mario
t=c(1:nt/nt)
t[length(t)]=0.9999
fes=numeric(length(t))
auxpu=c(0,puntosicc,1)
auxic=c(icc1[1],icc1,1)
#Se calcula la icc en los puntos i/nt
ifi1<-approx(auxpu,auxic,t)$y
fes = sapply(1:length(t),function(ii) {
alu = sapply(ifi1, function(yy) {
integrand=function(x){nucleod((yy-x)/hd,1,0)$res}
resAlu = integrate(integrand,-Inf,t[ii],subdivisions=10,rel.tol = 0.03,abs.tol =0.05,stop.on.error = FALSE)[[1]]
})
resFes = (1/(length(ifi1)*hd))*sum(alu)
})
t=c(max(t[1]-((t[2]-t[1])/(fes[2]-fes[1]))*fes[1],0),t,1)
fes[fes>=0.995]<-0.9995
### Arregla temas de borde
fes=c(0.0005,fes,0.9995)
### Toma la reflexion respecto  a la bisectriz delcuadrado unidad
resfin<-approx(fes,t,thetaiso)$y
return(list(resfin=resfin,puntos=thetaiso))
}
ISINPT=icciso(icc1=ICCNPT$NPICC,hd=hdi,thetaiso=seq(0,1,0.001),nt=200,puntosicc=pnorm(ICCNPT$puntos),nucleod=normal)
thepl=qnorm(seq(0,1,0.001))
plot(thepl,ICCNPU$NPICC,col="blue",xlim=c(-4,4),ylim=c(0,1))
Prob1 <- c + (1 - c) /(1 + exp(-D * a * (thepl - b)))
points(thepl,Prob1,col="red")
points(thepl,ISINPT$resfin,col = 'orange')
integrando=function(x){(3/4)*(1-((ifi1[j]-x)/hd)^2)*(abs(((ifi1[j]-x)/hd))<=1)}
x=seq(-100,100,2)
plot(x,integrando(x))
j=1
plot(x,integrando(x))
x=seq(-1,1,0.002)
plot(x,integrando(x))
x=seq(-0.2,1,0.002)
plot(x,integrando(x))
length(ifi1)
j=500
plot(x,integrando(x))
j=900
plot(x,integrando(x))
j=300
plot(x,integrando(x))
ISINPT=icciso(icc1=ICCNPT$NPICC,hd=hdi,thetaiso=seq(0,1,0.001),nt=200,puntosicc=pnorm(ICCNPT$puntos),nucleod=epa)
points(thepl,ISINPT$resfin,col = 'orange')
plot(thepl,ISINPT$resfin,col = 'orange')
ISINPT$resfin
fes
plot(t,fes)
plot(t,fes)
plot(fes,t)
hd
puntosicc
t
plot(t,fes)
plot(fes,t)
?approx
resfin<-approx(t,fes,puntosicc)$y
plot(t,resfin)
plot(puntosicc,resfin)
resfin<-approx(fes,t,puntosicc)$y
plot(puntosicc,resfin)
hd
t=c(1:nt/nt)
t[length(t)]=0.9999
res=numeric(length(t))
fes=numeric(length(t))
auxpu=c(0,puntosicc,1)
auxic=c(icc1[1],icc1,1)
ifi1<-approx(auxpu,auxic,t)$y
asi=as.data.frame(NULL)
asa=as.data.frame(NULL)
for (i in 1:length(t)){
int=list()
alu=list()
for (j in 1:length(ifi1)){
#      integrand=function(x){nucleod((ifi1[j]-x)/hd,1,0)$res}
integrand=function(x){(3/4)*(1-((ifi1[j]-x)/hd)^2)*(abs(((ifi1[j]-x)/hd))<=1)}
#      integrand=function(x){(1/sqrt(pi*2))*exp(-(((ifi1[j]-x)/hd)^2)/2)}
alu[j]=integrate(integrand,-Inf,t[i],subdivisions=10,rel.tol = 0.03,abs.tol =0.05,stop.on.error = FALSE)[[1]]
asi[i,j]=alu[j]
#      iit=0
#      for(k in seq(0,t[i],0.001)){
#iit=(1/sqrt(2*pi))*exp(-((ifi1[j]-k)/hd)^2/2)*0.001+iit
#        iit=(3/4)*(1-((ifi1[j]-k)/hd)^2)*(abs(((ifi1[j]-k)/hd))<=1)
#      }
}
fes[i]=(1/(length(ifi1)*hd))*sum(unlist(alu))
}
sument=apply(asi,1,sum)
fes2=(1/(length(ifi1)*hd))*sument
#  sument3=apply(asa,1,sum)
#  fes3=(1/(length(ifi1)*hd))*sument3
t=c(max(t[1]-((t[2]-t[1])/(fes[2]-fes[1]))*fes[1],0),t,1)
fes=c(0.0005,fes,0.9995)
resfin<-approx(fes,t,puntosicc)$y
plot(puntosicc,resfin)
plot(fes,t)
integrand=function(x){(3/4)*(1-((ifi1[j]-x)/hd)^2)*(abs(((ifi1[j]-x)/hd))<=1)}
asi
dim(asi)
asi[1,]
asi[,1]
fes[1:3]
fes2[1:3]
fes[1:4]
length(fes2)
t
fes2
a=c(1:nt/nt)
a
plot(a,fes2)
plot(fes2,a)
plot(a,fes2)
a
fes2[395:405]
fes2[360:405]
fes2[300:360]
fes2[314:342]
plot(a[314:342],fes2[314:342]
)
plot(a[314:342],fes2[314:342])
fes[323:324]
fes2[323:324]
j=343
x=seq(0,1,0.0001)
plot(x,integrate(x))
plot(x,integrand(x))
j=323
plot(x,integrand(x))
asi[323]
asi[323,]
t[323]
asi[324,]
asi[324,]
a
plot(a,asi[323,])
points(a,asi[324,],col='red')
plot(a,asi[323,])
points(a,asi[340,],col='red')
asi[323,]
uno=asi[323,]
dos=asi[324,]
uno[1:10]
dos[1:10]
sum(uno[1:10])
sum(dos[1:10])
sum(uno[1:10o])
sum(uno[1:100])
sum(dos[1:100])
sum(dos[1:300])
sum(uno[1:300])
sum(uno[1:1000])
sum(dos[1:1000])
t=c(1:nt/nt)
t[length(t)]=0.9999
res=numeric(length(t))
fes=numeric(length(t))
auxpu=c(0,puntosicc,1)
auxic=c(icc1[1],icc1,1)
ifi1<-approx(auxpu,auxic,t)$y
asi=as.data.frame(NULL)
asa=as.data.frame(NULL)
for (i in 1:length(t)){
int=list()
alu=list()
for (j in 1:length(ifi1)){
#      integrand=function(x){nucleod((ifi1[j]-x)/hd,1,0)$res}
integrand=function(x){(3/4)*(1-((ifi1[j]-x)/hd)^2)*(abs(((ifi1[j]-x)/hd))<=1)}
#      integrand=function(x){(1/sqrt(pi*2))*exp(-(((ifi1[j]-x)/hd)^2)/2)}
alu[j]=integrate(integrand,-Inf,t[i],subdivisions=100,rel.tol = 0.003,abs.tol =0.05,stop.on.error = FALSE)[[1]]
asi[i,j]=alu[j]
#      iit=0
#      for(k in seq(0,t[i],0.001)){
#iit=(1/sqrt(2*pi))*exp(-((ifi1[j]-k)/hd)^2/2)*0.001+iit
#        iit=(3/4)*(1-((ifi1[j]-k)/hd)^2)*(abs(((ifi1[j]-k)/hd))<=1)
#      }
}
fes[i]=(1/(length(ifi1)*hd))*sum(unlist(alu))
}
sument=apply(asi,1,sum)
fes2=(1/(length(ifi1)*hd))*sument
#  sument3=apply(asa,1,sum)
#  fes3=(1/(length(ifi1)*hd))*sument3
t=c(max(t[1]-((t[2]-t[1])/(fes[2]-fes[1]))*fes[1],0),t,1)
fes=c(0.0005,fes,0.9995)
resfin<-approx(fes,t,puntosicc)$y
plot(puntosicc,resfin)
t=c(1:nt/nt)
t[length(t)]=0.9999
res=numeric(length(t))
fes=numeric(length(t))
auxpu=c(0,puntosicc,1)
auxic=c(icc1[1],icc1,1)
ifi1<-approx(auxpu,auxic,t)$y
asi=as.data.frame(NULL)
asa=as.data.frame(NULL)
for (i in 1:length(t)){
int=list()
alu=list()
for (j in 1:length(ifi1)){
#      integrand=function(x){nucleod((ifi1[j]-x)/hd,1,0)$res}
integrand=function(x){(3/4)*(1-((ifi1[j]-x)/hd)^2)*(abs(((ifi1[j]-x)/hd))<=1)}
#      integrand=function(x){(1/sqrt(pi*2))*exp(-(((ifi1[j]-x)/hd)^2)/2)}
alu[j]=integrate(integrand,-Inf,t[i],subdivisions=700,rel.tol = 0.00003,abs.tol =0.00005,stop.on.error = FALSE)[[1]]
asi[i,j]=alu[j]
#      iit=0
#      for(k in seq(0,t[i],0.001)){
#iit=(1/sqrt(2*pi))*exp(-((ifi1[j]-k)/hd)^2/2)*0.001+iit
#        iit=(3/4)*(1-((ifi1[j]-k)/hd)^2)*(abs(((ifi1[j]-k)/hd))<=1)
#      }
}
fes[i]=(1/(length(ifi1)*hd))*sum(unlist(alu))
}
sument=apply(asi,1,sum)
fes2=(1/(length(ifi1)*hd))*sument
#  sument3=apply(asa,1,sum)
#  fes3=(1/(length(ifi1)*hd))*sument3
t=c(max(t[1]-((t[2]-t[1])/(fes[2]-fes[1]))*fes[1],0),t,1)
fes=c(0.0005,fes,0.9995)
resfin<-approx(fes,t,puntosicc)$y
plot(puntosicc,resfin)
a
t=c(1:nt/nt)
t[length(t)]=0.9999
res=numeric(length(t))
fes=numeric(length(t))
auxpu=c(0,puntosicc,1)
auxic=c(icc1[1],icc1,1)
ifi1<-approx(auxpu,auxic,t)$y
asi=as.data.frame(NULL)
asa=as.data.frame(NULL)
for (i in 1:length(t)){
int=list()
alu=list()
for (j in 1:length(ifi1)){
#      integrand=function(x){nucleod((ifi1[j]-x)/hd,1,0)$res}
integrand=function(x){(3/4)*(1-((ifi1[j]-x)/hd)^2)*(abs(((ifi1[j]-x)/hd))<=1)}
#      integrand=function(x){(1/sqrt(pi*2))*exp(-(((ifi1[j]-x)/hd)^2)/2)}
alu[j]=integrate(integrand,0,t[i],subdivisions=700,rel.tol = 0.00003,abs.tol =0.00005,stop.on.error = FALSE)[[1]]
asi[i,j]=alu[j]
#      iit=0
#      for(k in seq(0,t[i],0.001)){
#iit=(1/sqrt(2*pi))*exp(-((ifi1[j]-k)/hd)^2/2)*0.001+iit
#        iit=(3/4)*(1-((ifi1[j]-k)/hd)^2)*(abs(((ifi1[j]-k)/hd))<=1)
#      }
}
fes[i]=(1/(length(ifi1)*hd))*sum(unlist(alu))
}
sument=apply(asi,1,sum)
fes2=(1/(length(ifi1)*hd))*sument
#  sument3=apply(asa,1,sum)
#  fes3=(1/(length(ifi1)*hd))*sument3
t=c(max(t[1]-((t[2]-t[1])/(fes[2]-fes[1]))*fes[1],0),t,1)
fes=c(0.0005,fes,0.9995)
resfin<-approx(fes,t,puntosicc)$y
plot(puntosicc,resfin)
t=c(1:nt/nt)
t[length(t)]=0.9999
res=numeric(length(t))
fes=numeric(length(t))
auxpu=c(0,puntosicc,1)
auxic=c(icc1[1],icc1,1)
ifi1<-approx(auxpu,auxic,t)$y
asi=as.data.frame(NULL)
asa=as.data.frame(NULL)
for (i in 1:length(t)){
int=list()
alu=list()
for (j in 1:length(ifi1)){
#      integrand=function(x){nucleod((ifi1[j]-x)/hd,1,0)$res}
integrand=function(x){(3/4)*(1-((ifi1[j]-x)/hd)^2)*(abs(((ifi1[j]-x)/hd))<=1)}
#      integrand=function(x){(1/sqrt(pi*2))*exp(-(((ifi1[j]-x)/hd)^2)/2)}
alu[j]=integrate(integrand,-100,t[i],subdivisions=700,rel.tol = 0.00003,abs.tol =0.00005,stop.on.error = FALSE)[[1]]
asi[i,j]=alu[j]
#      iit=0
#      for(k in seq(0,t[i],0.001)){
#iit=(1/sqrt(2*pi))*exp(-((ifi1[j]-k)/hd)^2/2)*0.001+iit
#        iit=(3/4)*(1-((ifi1[j]-k)/hd)^2)*(abs(((ifi1[j]-k)/hd))<=1)
#      }
}
fes[i]=(1/(length(ifi1)*hd))*sum(unlist(alu))
}
sument=apply(asi,1,sum)
fes2=(1/(length(ifi1)*hd))*sument
#  sument3=apply(asa,1,sum)
#  fes3=(1/(length(ifi1)*hd))*sument3
t=c(max(t[1]-((t[2]-t[1])/(fes[2]-fes[1]))*fes[1],0),t,1)
fes=c(0.0005,fes,0.9995)
resfin<-approx(fes,t,puntosicc)$y
plot(puntosicc,resfin)
t=c(1:nt/nt)
t[length(t)]=0.9999
res=numeric(length(t))
fes=numeric(length(t))
auxpu=c(0,puntosicc,1)
auxic=c(icc1[1],icc1,1)
ifi1<-approx(auxpu,auxic,t)$y
asi=as.data.frame(NULL)
asa=as.data.frame(NULL)
for (i in 1:length(t)){
int=list()
alu=list()
for (j in 1:length(ifi1)){
#      integrand=function(x){nucleod((ifi1[j]-x)/hd,1,0)$res}
integrand=function(x){(3/4)*(1-((ifi1[j]-x)/hd)^2)*(abs(((ifi1[j]-x)/hd))<=1)}
#      integrand=function(x){(1/sqrt(pi*2))*exp(-(((ifi1[j]-x)/hd)^2)/2)}
alu[j]=integrate(Vectorize(integrand),-100,t[i],subdivisions=700,rel.tol = 0.00003,abs.tol =0.00005,stop.on.error = FALSE)[[1]]
asi[i,j]=alu[j]
#      iit=0
#      for(k in seq(0,t[i],0.001)){
#iit=(1/sqrt(2*pi))*exp(-((ifi1[j]-k)/hd)^2/2)*0.001+iit
#        iit=(3/4)*(1-((ifi1[j]-k)/hd)^2)*(abs(((ifi1[j]-k)/hd))<=1)
#      }
}
fes[i]=(1/(length(ifi1)*hd))*sum(unlist(alu))
}
sument=apply(asi,1,sum)
fes2=(1/(length(ifi1)*hd))*sument
#  sument3=apply(asa,1,sum)
#  fes3=(1/(length(ifi1)*hd))*sument3
t=c(max(t[1]-((t[2]-t[1])/(fes[2]-fes[1]))*fes[1],0),t,1)
fes=c(0.0005,fes,0.9995)
resfin<-approx(fes,t,puntosicc)$y
plot(puntosicc,resfin)
t=c(1:nt/nt)
t[length(t)]=0.9999
res=numeric(length(t))
fes=numeric(length(t))
auxpu=c(0,puntosicc,1)
auxic=c(icc1[1],icc1,1)
ifi1<-approx(auxpu,auxic,t)$y
asi=as.data.frame(NULL)
asa=as.data.frame(NULL)
for (i in 1:length(t)){
int=list()
alu=list()
for (j in 1:length(ifi1)){
#      integrand=function(x){nucleod((ifi1[j]-x)/hd,1,0)$res}
integrand=function(x){(3/4)*(1-((ifi1[j]-x)/hd)^2)*(abs(((ifi1[j]-x)/hd))<=1)}
#      integrand=function(x){(1/sqrt(pi*2))*exp(-(((ifi1[j]-x)/hd)^2)/2)}
alu[j]=integrate(Vectorize(integrand),-10,t[i],subdivisions=700,rel.tol = 0.00003,abs.tol =0.00005,stop.on.error = FALSE)[[1]]
asi[i,j]=alu[j]
#      iit=0
#      for(k in seq(0,t[i],0.001)){
#iit=(1/sqrt(2*pi))*exp(-((ifi1[j]-k)/hd)^2/2)*0.001+iit
#        iit=(3/4)*(1-((ifi1[j]-k)/hd)^2)*(abs(((ifi1[j]-k)/hd))<=1)
#      }
}
fes[i]=(1/(length(ifi1)*hd))*sum(unlist(alu))
}
sument=apply(asi,1,sum)
fes2=(1/(length(ifi1)*hd))*sument
#  sument3=apply(asa,1,sum)
#  fes3=(1/(length(ifi1)*hd))*sument3
t=c(max(t[1]-((t[2]-t[1])/(fes[2]-fes[1]))*fes[1],0),t,1)
fes=c(0.0005,fes,0.9995)
resfin<-approx(fes,t,puntosicc)$y
t=c(1:nt/nt)
t[length(t)]=0.9999
res=numeric(length(t))
fes=numeric(length(t))
auxpu=c(0,puntosicc,1)
auxic=c(icc1[1],icc1,1)
ifi1<-approx(auxpu,auxic,t)$y
asi=as.data.frame(NULL)
asa=as.data.frame(NULL)
for (i in 1:length(t)){
int=list()
alu=list()
for (j in 1:length(ifi1)){
#      integrand=function(x){nucleod((ifi1[j]-x)/hd,1,0)$res}
integrand=function(x){(3/4)*(1-((ifi1[j]-x)/hd)^2)*(abs(((ifi1[j]-x)/hd))<=1)}
#      integrand=function(x){(1/sqrt(pi*2))*exp(-(((ifi1[j]-x)/hd)^2)/2)}
alu[j]=integrate(integrand,-10,t[i],subdivisions=700,rel.tol = 0.00003,abs.tol =0.00005,stop.on.error = FALSE)[[1]]
asi[i,j]=alu[j]
#      iit=0
#      for(k in seq(0,t[i],0.001)){
#iit=(1/sqrt(2*pi))*exp(-((ifi1[j]-k)/hd)^2/2)*0.001+iit
#        iit=(3/4)*(1-((ifi1[j]-k)/hd)^2)*(abs(((ifi1[j]-k)/hd))<=1)
#      }
}
fes[i]=(1/(length(ifi1)*hd))*sum(unlist(alu))
}
sument=apply(asi,1,sum)
fes2=(1/(length(ifi1)*hd))*sument
#  sument3=apply(asa,1,sum)
#  fes3=(1/(length(ifi1)*hd))*sument3
t=c(max(t[1]-((t[2]-t[1])/(fes[2]-fes[1]))*fes[1],0),t,1)
fes=c(0.0005,fes,0.9995)
resfin<-approx(fes,t,puntosicc)$y
plot(puntosicc,resfin)
x=seq(-0.5,1,0.0001)
plot(x,integrand(x))
j=1
plot(x,integrand(x))
plot(x,integrand(x))
plot(puntosicc,resfin)
t=c(1:nt/nt)
t[length(t)]=0.9999
res=numeric(length(t))
fes=numeric(length(t))
auxpu=c(0,puntosicc,1)
auxic=c(icc1[1],icc1,1)
ifi1<-approx(auxpu,auxic,t)$y
asi=as.data.frame(NULL)
asa=as.data.frame(NULL)
for (i in 1:length(t)){
int=list()
alu=list()
for (j in 1:length(ifi1)){
#      integrand=function(x){nucleod((ifi1[j]-x)/hd,1,0)$res}
integrand=function(x){(3/4)*(1-((ifi1[j]-x)/hd)^2)*(abs(((ifi1[j]-x)/hd))<=1)}
#      integrand=function(x){(1/sqrt(pi*2))*exp(-(((ifi1[j]-x)/hd)^2)/2)}
alu[j]=integrate(integrand,-1,t[i],subdivisions=700,rel.tol = 0.00003,abs.tol =0.00005,stop.on.error = FALSE)[[1]]
asi[i,j]=alu[j]
#      iit=0
#      for(k in seq(0,t[i],0.001)){
#iit=(1/sqrt(2*pi))*exp(-((ifi1[j]-k)/hd)^2/2)*0.001+iit
#        iit=(3/4)*(1-((ifi1[j]-k)/hd)^2)*(abs(((ifi1[j]-k)/hd))<=1)
#      }
}
fes[i]=(1/(length(ifi1)*hd))*sum(unlist(alu))
}
sument=apply(asi,1,sum)
fes2=(1/(length(ifi1)*hd))*sument
#  sument3=apply(asa,1,sum)
#  fes3=(1/(length(ifi1)*hd))*sument3
t=c(max(t[1]-((t[2]-t[1])/(fes[2]-fes[1]))*fes[1],0),t,1)
fes=c(0.0005,fes,0.9995)
resfin<-approx(fes,t,puntosicc)$y
plot(puntosicc,resfin)
q()
libray(devtools)
library(devtools)
load_all
load_all()
q()
=======
>>>>>>> a978270a9f9da4813544e1e232409d92272a6f3f
